@startuml
'https://plantuml.com/state-diagram
skinparam defaultTextAlignment left
scale 350 width

[*] --> UP
state DOWN : entry/ issue ToolDownEvent

state UP {
    state UP: entry/ ToolUpEventAction, ToolUpEvent(tool)
    state UP: PART_LOADING / LoadPartAction, PartLoadedEvt(tool, part)
    state UP: PART_UNLOADING / UnloadPartAction, PartUnloadedEvt(tool, part)

    state STOPPED
    state UP_CHOICE <<choice>>

    STOPPED: entry / ToolStoppedEvent(tool)

    [*] --> STOPPED
    STOPPED --> UP_CHOICE: START
    UP_CHOICE --> OPERATING: [FlowIsFree]]
    UP_CHOICE --> IDLE: [else]

    OPERATING --> STOPPED: STOP
    OPERATING --> IDLE

    state IDLE {
        IDLE: entry / ToolIdleEvent(tool)
        state IDLE_UPSTREAM: entry / ToolIdleEvent(UPSTREAM)
        state IDLE_DOWNSTREAM: entry: ToolIdleEvent(DOWNSTREAM)
        state IDLE_CHOICE <<choice>>
        [*] --> IDLE_CHOICE
        IDLE_CHOICE --> IDLE_UPSTREAM: [InportEmpty]
        IDLE_CHOICE --> IDLE_DOWNSTREAM: [else]
        IDLE_UPSTREAM --> [*]:[FlowIsFree]
        IDLE_DOWNSTREAM --> [*]:[FlowIsFree]
    }

    state OPERATING {
        OPERATING: entry / ToolOperatingEvent(tool)
        state LOADING_PROCESS: entry / ProcessNewPartAction, PartInProcessEvent(tool, part)
        state UNLOADING_PROCESS: entry / EjectFinishedPartAction, PartProcessedEvent(tool, part)
        state OPERATING_CHOICE <<choice>>
        state PROCESSING_PART

        [*] --> OPERATING_CHOICE
        OPERATING_CHOICE --> LOADING_PROCESS: [ProcessEmpty]
        OPERATING_CHOICE --> UNLOADING_PROCESS: [else]
        LOADING_PROCESS --> PROCESSING_PART

        PROCESSING_PART --> UNLOADING_PROCESS: [await cycle time]
        UNLOADING_PROCESS --> LOADING_PROCESS: [FlowIsFree]
        UNLOADING_PROCESS --> [*] : [InportEmpty]
        UNLOADING_PROCESS --> [*] : [OutportFull]
    }

    IDLE --> OPERATING: [FlowIsFree]
    IDLE --> STOPPED: STOP
}

UP --> DOWN: FAULT
DOWN --> UP: FAULT_CLEAR
@enduml