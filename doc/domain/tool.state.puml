@startuml
'https://plantuml.com/state-diagram

scale 350 width

hide empty description
state DOWN : entry/ issue ToolDownEvent

[*] --> UP
UP --> DOWN: FAULT
DOWN --> UP: FAULT_CLEAR
state UP {
    state UP: entry/ ToolUpEvt
    state STOPPED: entry/ ToolStoppedEvt
    state IDLE
    state PROCESSING: entry/ ToolProcessingEvt(tool, part); process(inport.next(part))
    state PROCESSING: tool.process.run(Part) returns / FINISHED(tool, part); output.add(part)
    state PROCESSING: loadPart(Part) [!InPortFull] / input.add(part); PartLoadEvt(tool, part)
    state PROCESSING: unloadPart() [!OutportEmpty] / output.take(); PartUnloadEvt(tool, part)
    state PROCESSING: exit/ PartProcessedEvt(tool, part)

    [*] --> STOPPED
    STOPPED --> IDLE: START [InportEmpty] / \nToolIdleEvt(tool, UPSTREAM)
    STOPPED --> IDLE: START [OutportFull] / \nToolIdleEvt(tool, DOWNSTREAM)

    STOPPED --> PROCESSING: START [FlowFree]}
    PROCESSING --> PROCESSING: FINISHED(tool, part) [FlowFree]
    PROCESSING --> IDLE: FINISHED [InportEmpty]/ \nToolIdleEvt((tool, UPSTREAM)
    PROCESSING --> IDLE: FINISHED [OutportFull]/ \nToolIdleEvt((tool, DOWNSTREAM)
    IDLE --> PROCESSING: PART_LOAD [!OutportFull]
    IDLE --> PROCESSING: PART_UNLOAD [!InportEmpty]

    IDLE --> STOPPED: STOP
    PROCESSING --> STOPPED: STOP

    STOPPED --> [*]
    IDLE --> [*]
    PROCESSING --> [*]

}
note as T
    FlowFree: (!InportEmpty && !OutportFull)
end note
@enduml