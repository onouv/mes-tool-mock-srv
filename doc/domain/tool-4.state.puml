@startuml
'https://plantuml.com/state-diagram
skinparam defaultTextAlignment left
scale 350 width

[*] --> UP
state DOWN : entry/ issue ToolDownEvent

state UP {
    state UP: entry/ ToolUpEventAction, ToolUpEvent(tool)
    state UP: PART_LOADING / LoadPartAction, PartLoadedEvt(tool, part)
    state UP: PART_UNLOADING / UnloadPartAction, PartUnloadedEvt(tool, part)

    state STOPPED
    STOPPED: entry / ToolStoppedEvent(tool)

    state CHOICE_START <<choice>>
    [*] --> STOPPED
    STOPPED --> CHOICE_START: START
    CHOICE_START --> OPERATING: [InportNotEmpty && OutportNotFull]
    CHOICE_START --> IDLE: [InportEmpty || OutportFull]

    OPERATING --> STOPPED: STOP
    OPERATING --> IDLE

    state IDLE {
        state INPORT_EMPTY: entry / ToolIdleEvent(UPSTREAM)
        [*] --> INPORT_EMPTY : [InportEmpty]
        INPORT_EMPTY --> [*]: [InportNotEmpty]
        ||
        state OUTPORT_FULL: entry / ToolIdleEvent(DOWNSTREAM)
        [*] --> OUTPORT_FULL: [OutportFull]
        OUTPORT_FULL --> [*]: [OutportNotFull]
    }

    state OPERATING {
        OPERATING: entry / ToolOperatingEvent(tool)
        state LOADING_PROCESS: PartInProcessEvent(tool, part)
        state UNLOADING_PROCESS: PartProcessedEvent(tool, part)
        state CHOICE_LOADING <<choice>>
        state PROCESSING_PART

        [*] --> CHOICE_LOADING
        CHOICE_LOADING --> LOADING_PROCESS: [ProcessEmpty]
        CHOICE_LOADING --> UNLOADING_PROCESS: [ProcessNotEmpty]
        LOADING_PROCESS --> PROCESSING_PART

        PROCESSING_PART --> UNLOADING_PROCESS: [await cycle time]
        UNLOADING_PROCESS --> LOADING_PROCESS: [InportNotEmpty && OutportNotFull]
        UNLOADING_PROCESS --> [*] : [InportEmpty]
        UNLOADING_PROCESS --> [*] : [OutportFull]
    }

    IDLE --> OPERATING
    IDLE --> STOPPED: STOP

}

UP --> DOWN: FAULT
DOWN --> UP: FAULT_CLEAR
@enduml