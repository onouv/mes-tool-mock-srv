@startuml
'https://plantuml.com/class-diagram

package domain {

class DefaultTool <<DomainAggregateRoot>>{

    id
    ToolStatus status
    DowntimeReason downtimeReason

    +prototype(ToolDecsription): Tool
    +start(ToolId): DomainResult
    +stop(ToolId): DomainResult
    +loadPart(ToolId, LoadportId, Part): DomainResult
    +unloadPart(ToolId, LoadportId): DomainResult
    +fault(ToolId): DomainResult
    +clearFault(ToolId): DomainResult

}

class Part <<DomainEntity>> {
    id
    PartStatus status
}

class Process <<DomainEntity>> {
    id
    name
    +run(Part)

}

class ToolDownEvent <<DomainEvent>>

class ToolUpEvent <<DomainEvent>>

class ToolStoppedEvent

class ToolIdleEvent

class ToolProcessingEvent

class PartLoadedEvent <<DomainEvent>> {
    Partid
    ToolId
    LoadportId

}

class PartUnloadedEvent <<DomainEvent>> {
    PartId
    ToolId
    LoadPortId
}

class DomainEvent {
    TimeInstant
}
class ToolEvent {
    ToolId
}

class PartEvent {
    LoadportId
    PartId
}

ToolEvent --|> DomainEvent
PartEvent --|> ToolEvent
ToolIdleEvent --|> ToolEvent
ToolDownEvent --|> ToolEvent
ToolUpEvent --|> ToolEvent
ToolStoppedEvent --|> ToolEvent
ToolProcessingEvent --|> ToolEvent
PartLoadedEvent --|> PartEvent
PartUnloadedEvent --|> PartEvent

Enum ToolStatus {
    UP,
    STOPPED,
    IDLE,
    PROCESSING,
    DOWN
}

Enum PartStatus {
    UNPROCESSED,
    PROCESSED_GOOD,
    PROCESSED_BAD
}

DefaultTool "1" o-- "*" Part
DefaultTool "1" *-- "1 #process" Process
DefaultTool ...> ToolStatus
Part *--> PartStatus
Process "1" --> "1" Part: processes
DefaultTool --> ToolDownEvent: "issues"
DefaultTool --> ToolUpEvent: "issues"
DefaultTool --> PartLoadedEvent: "issues"
DefaultTool --> PartUnloadedEvent: "issues"
DefaultTool --> ToolIdleEvent
DefaultTool --> ToolStoppedEvent
DefaultTool --> ToolProcessingEvent

}
@enduml